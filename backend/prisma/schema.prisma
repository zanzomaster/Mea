generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  name        String
  email       String       @unique
  password    String
  role        String       @default("USER")
  profile     Profile?
  educations  Education[]
  applications InternshipApplication[] // <-- เพิ่มบรรทัดนี้
  createdAt   DateTime     @default(now())
  Mailboxs   Mailbox[]   // เพิ่มบรรทัดนี้
}

model Profile {
  id            Int      @id @default(autoincrement())
  user          User     @relation(fields: [userId], references: [id])
  userId        Int      @unique
  firstName     String?  // เพิ่ม
  lastName      String?  // เพิ่ม
  gender        String?
  birthDate     DateTime?
  nationality   String?
  religion      String?
  phone         String?
  englishLevel  String?
  internshipStart DateTime? // เพิ่ม
  internshipEnd   DateTime? // เพิ่ม
  // เพิ่ม field อื่นๆ ตามที่ต้องการ
}

model Internship {
  id        Int    @id @default(autoincrement())
  office    String
  desc      String?
  location  String?
  address   String?
  count     Int?
  applications InternshipApplication[] // <-- เพิ่มบรรทัดนี้
  createdAt DateTime @default(now())
}

model Education {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  level     String
  school    String
  faculty   String?
  major     String?
  gpa       Float?
  status    String?
}

model Zone {
  id    Int    @id @default(autoincrement())
  name  String @unique
  offices Office[]
}

model Office {
  id      Int    @id @default(autoincrement())
  name    String
  address String?
  zone    Zone   @relation(fields: [zoneId], references: [id])
  zoneId  Int
}

model InternshipApplication {
  id            Int      @id @default(autoincrement())
  user          User     @relation(fields: [userId], references: [id])
  userId        Int
  internship    Internship @relation(fields: [internshipId], references: [id])
  internshipId  Int
  about         String?
  transcript    String?   // เก็บ path ไฟล์
  portfolio     String?   // เก็บ path ไฟล์
  status        String?   // <-- เพิ่มบรรทัดนี้
  createdAt     DateTime  @default(now())
}

model Mailbox {
  id            Int      @id @default(autoincrement())
  user          User     @relation(fields: [userId], references: [id])
  userId        Int
  title         String
  message       String
  isRead        Boolean  @default(false)
  createdAt     DateTime @default(now())
}